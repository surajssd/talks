
For any software it's typical to have config files:

- ini
- xml
- json
- yaml

- So for your app you have specific config values that you wanna read from files

///TODO: create some random example and then write some custom validation code
///Show them simple validator spec and the same example





- But you know spec keeps on changing and on changing spec you have to write new code to validate all the inputs

//TODO: validate this line "YAML is full JSON"


What is JSON Schema?

- JSON Schema is a vocabulary that allows you to annotate and validate JSON/YAML documents


Why do you need JSON Schema?

- Specify your data format in human + machine readable format
- Helps you validate user specified data
- Write validator spec once and save your self from writing validation code by yourself



Some famous examples:

- docker-compose https://github.com/docker/compose/blob/master/compose/config/config_schema_v2.0.json
- libcompose https://github.com/docker/libcompose/blob/master/config/schema.go
- kompose pref https://github.com/surajssd/kompose/blob/9b866c16dcc89e56bc5293a86616183d40a37dd3/pkg/config/schema.go


Using JSON Schema in golang using gojsonschema library?



Bunch of examples

/// TODO: add more data about HyperSchema


Ref:

- http://json-schema.org/
- 2016 - Intro to JSON Schema with Go, and Generating Validators And Skeleton - Daisuke Maki https://www.youtube.com/watch?v=iu9Bc4yYisw
- https://en.wikipedia.org/wiki/YAML
